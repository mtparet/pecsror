<!DOCTYPE html>
<html>
  <head>
    <title>Images sequentielles</title>
  </head>
  <body>


<script type="text/javascript">

    /*$(document).ready (
        function() {
            $( "#box_in" ).Sortable( {
            accept : 'sortable_item',
            axis : 'horizontally',
            opacity : 0.6,
            onchange : function ( sorted ) {
            serial = $.SortSerialize( 'box_in' ); 
            }

			 
        });
    });*/

  var tab_order = new Array();
  var tab_correct = new Array();

  function insert_end(id_name){
    tab_order.push(id_name);
  }
  
  function insert_at(id_name,num_place){
    var temp_name = id_name;
    var temp_name2;
    if(num_place < tab_order.length){
     // on déplace le tableau sur la gauche
      for(i = num_place;i < tab_order.length; i++){
        temp_name2 = tab_order[i];
        tab_order[i] = temp_name;
        temp_name = temp_name2
      }
      
      tab_order.push(temp_name);
    }
  }
   
  function move_end(id_name){
    var index = tab_order.indexOf(id_name);
    tab_order.splice(index,1);
    tab_order.push(id_name);
       
  }

  function move_at(id_name,num_place){
    var index = tab_order.indexOf(id_name);
    tab_order.splice(index,1);

    if(num_place >= tab_order.length){
      tab_order.push(id_name);
    }else{
      insert_at(id_name,num_place);
    }
  }

	function drag(target, evt) {
		evt.dataTransfer.setData("Text", target.id);
	
	}
	function drop(target, evt) {
		var id = evt.dataTransfer.getData("Text");
		var id_name = document.getElementById(id).id;
    var parent = target.parentNode;
    var target_id = target.id;
    var element_drag = document.getElementById(id);
    var parent_image = element_drag.parentNode;
    var target_place;

    if(target.children.length > 0){
      target_place = tab_order.indexOf(target.getElementsByClassName("image_sequence")[0].id);
    }
    
    var before_name = "";

    //on teste si l'image provient déjà de la liste
    if(parent_image.className == "box2"){
      parent_image.parentNode.removeChild(parent_image);
      //on teste si on va réellement déplacer l'image
      var image_place = tab_order.indexOf(element_drag.id);

      if(image_place != target_place){
        //test si on déplacer l'image d'une case vers la droite
        //if(target_place == (image_place + 1)){
          //target_place++;          
        //} 
        if( (target_id == "box_drop") || (target_place >= tab_order.length ) ){
          move_end(id_name);
        }else{
          move_at(id_name,target_place);
        }
 
      }
    }else{  
      // on teste si l'on déplace à la fin (box_drop) ou sur une case déjà occupée
      if( target_id == "box_drop"){
        insert_end(id_name);

      }else{
        insert_at(id_name,target_place);
      }
      
    }
      
      //on récupère la place final de l'élément dans le tableau
      if(tab_order.indexOf(id_name) >= (tab_order.length -1)){
        before_name = "box_drop";
      }else{
        //sinon on récupère l'élément qui suit dans le tableau et le nom de la box qui le contient.
        before_name = document.getElementById(tab_order[(tab_order.indexOf(id_name) + 1)]).parentNode.id;
      }
      
      var box = document.createElement("div");
      box.className = "box2";
      box.id = id_name + "_box";
      box.setAttribute("ondragover", "return false");
      box.setAttribute("ondrop","drop(this, event)");

      box.appendChild(element_drag);
      

      parent.insertBefore(box, document.getElementById(before_name));
      
		  evt.preventDefault();
      check_order();
  }

    function checkorder(id_name){
      var tab_order_length = tab_order.length;

      //si il n'y a qu'une image on ne peut pas tester
      if(tab_order_length > 1){

        var index_order = tab_order.indexOf(id_name);
        var index_correct = tab_correct.indexOf(id_name);
        
        //si un autre image ne peut être que a droite
        if(index_order == 0){
          //on test si l'image à droite est la même dans les deux tableaux
          if(((index_correct + 1) < tab_correct.length ) && (tab_order[index_order + 1] == tab_correct[index_correct + 1])){
            smiley = document.getElementById("smiley_good").cloneNode(true);
          }else{
            smiley = document.getElementById("smiley_bad").cloneNode(true);
          } 
        //sinon on test l'image à gauche
        //TODO : préviligier la plus longue chaine juste
        }else{
          if(((index_correct - 1) >= 0 ) && (tab_order[index_order - 1] == tab_correct[index_correct - 1])){
            smiley = document.getElementById("smiley_good").cloneNode(true);
          }else{
          //sinon on test il y a une image à droite
            if(((index_correct + 1) < tab_order.length ) && ((index_correct + 1) < tab_correct.length ) && (tab_order[index_order + 1] == tab_correct[index_correct + 1])){
                 smiley = document.getElementById("smiley_good").cloneNode(true);
            }else{
               smiley = document.getElementById("smiley_bad").cloneNode(true);
            }
           
          } 
        }

        smiley.id += id_name;
        smiley.style.display = "";
        return smiley;
      }
    }

    function check_order(){
    var id_name ;
    var image_parent;
    var smiley_current;
    var smiley;
      if(tab_order.length > 1 ){
        for(i = 0; i < tab_order.length; i++){
          id_name = tab_order[i];
          image_parent = document.getElementById(id_name).parentNode;
          smiley_current = image_parent.getElementsByClassName("smiley")[0];
          if(smiley_current != null){
            image_parent.removeChild(smiley_current);
          }
          smiley = checkorder(id_name)
          image_parent.insertBefore(smiley,document.getElementById(id_name))
        }
        
      }

      
    }

    function add_good(id_name){
      var image_parent = document.getElementById(id_name).parentNode;
      var smiley_good = document.getElementById("smiley_good").cloneNode(true);
      smiley_good.id += "a";
      smiley_good.style.display = "block";
      image_parent.insertBefore(smiley_good,document.getElementById(id_name))
    }

    function add_bad(id_name){
      var image_parent = document.getElementById(id_name).parentNode;
      var smiley_bad = document.getElementById("smiley_bad").cloneNode(true);
      smiley_bad.id += "a";
      smiley_bad.style.display = "block";
      image_parent.insertBefore(smiley_bad,document.getElementById(id_name))
    }

    // plus à jour pas forcément juste, ne pas utiliser avant revu
    function rebuild_box(){
      box_old = document.getElementById("box_in"); 
      //for(var i = 0; i < target.children.length; i++){
      //  target.removeChild(target.children[i]); 
      //} 

        var box_in = document.createElement("div");
        box_in.className = "box_in";
        box_in.id = "box_in";

      for(i = 0; i < tab_order.length; i++){
        var box = document.createElement("div");
        box.className = "box2";
        box.id = i;
        box.setAttribute("ondragover", "return false");
        box.setAttribute("ondrop","drop(this, event)");
        box.appendChild(document.getElementById(tab_order[i]));
        //var marginLeft_box = (i * 100);
        //box.style.marginLeft = marginLeft_box;
        box_in.appendChild(box);
      }

      var box = document.createElement("div");
        box.className = "box2";
        box.id = "drop_box";
        box.setAttribute("ondragover", "return false");
        box.setAttribute("ondrop","drop(this, event");
        box_in.appendChild(box);

      
      var a = box_old.parentNode.replaceChild(box_in,box_old);
    }


	   /*var c = {};
       c['authenticity_token'] = encodeURIComponent(window._token);
       $.ajax({
         type: "POST",
          url: "create_phrase",
          data: "phrase=" + phrase,
          success: function(msg){
            $(this).append("<br>Dropped!");
          }
       });*/

	
</script>

  
	<!-- parcourt de la liste des catégories et affichage de l'image correspondant -->
	 <% for sequence in @list_sequence.collect do %> 
    <%= sequence.name %>
    <% unless sequence.sequence_liste.first.image.image_file.nil? %>
    <%= link_to(image_tag(sequence.sequence_liste.first.image.image_file.thumb.url), {:controller => "image_sequentielle", :action => 'display_sequence', :sequence_name => sequence.name}, :remote => true) %>
  <% end %>
	<% end %>

  <div id="sequence">
    <%= render :partial => "sequence" %>
  </div>

  <%= link_to 'create audio', {:controller => 'image_sequentielle', :action => 'create_audio'}, :remote => true %>

	<div id="audio">
		<%= render :partial => "audio" %>
	</div>

  <div id="box_in" class="box_in">
    <%= render :partial => "box_in" %>
  </div>

  <%= render :partial => "smiley" %>

  </body>
</html>
